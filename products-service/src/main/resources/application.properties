spring.application.name=products-service

#server.port=8081
# Para que se establezca un puerto aleatorio
server.port=0

spring.datasource.url=jdbc:postgresql://localhost:5432/ms_products
spring.datasource.username=irs
spring.datasource.password=Test123
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Eureka client
eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka

# Keycloak
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/shop-app-realm-dev
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/shop-app-realm

#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/springboot-microservicios-shop-app-realm/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/shop-app-realm/protocol/openid-connect/certs
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/shop-app-realm-dev/protocol/openid-connect/certs

# Actuator
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/actuator/products

# Tracing
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

logging.level.root=debug
logging.pattern.level= %5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]